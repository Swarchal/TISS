% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/trim_cor.R
\name{trim_cor}
\alias{trim_cor}
\title{Calculates correlation of shifted vectors}
\usage{
trim_cor(x, y, n, p)
}
\arguments{
\item{x}{vector}

\item{y}{vector}

\item{n}{integer. The number of titrations shifts in either directions. i.e 
\code{n = 2} will shift 2 titrations to the left, and 2 to the right.}

\item{p}{interger. The number of features. \code{n} will always be a multiple
of \code{p}. This is so identical features are always aligned despite
titration shifts.}
}
\value{
cor_measurements vector of correlations for each shift
}
\description{
This function is for calculating the correlation between two vectors \code{x}
and \code{y}. The vectors are shifted \code{n} times by \code{p} elements. 
This relates to shifted n number of concentrations in either direction, each 
concentration shift being a multiple of the number of features.
}
\examples{
# create dummy dataset
l <- list()
for (i in 1:100) l[[i]] <- rnorm(100)
df <- as.data.frame(l)
names(df) <- paste("col", 1:100, sep = "_")
# order values (more obvious correlation shifts)
df <- apply(df, 2, sort)
out <- trim_cor(df[,1], df[,2], n = 5, p = 5)
plot(out, type = "l")

# plot all correlations
out <- trim_cor(df[,1], df[,2], 20, 3)
plot(out,
     type = "l",
     xaxt =  "n",
     ylab = "correlation",
     main = "col_1 vs all correlation",
     sub = "20 shifts, 3 elements each")
axis(1, at = 1:41,
     labels = names(out))
for (i in 3:ncol(df)){
 lines(trim_cor(df[,1], df[,i], 20, 3), col = "gray50")
}
}

